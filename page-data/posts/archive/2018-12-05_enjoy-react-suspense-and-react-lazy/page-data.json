{"componentChunkName":"component---src-templates-pages-post-tsx","path":"/posts/archive/2018-12-05_enjoy-react-suspense-and-react-lazy/","result":{"data":{"markdownRemark":{"id":"96b7a2bf-a821-5b1c-8dc6-68f4e4a5f83c","html":"<p><img src=\"https://cdn-images-1.medium.com/max/800/1*uTXEDHGkQLEWi6oX_oIFGQ.png\" alt=\"12月05日は[モーツァルトの忌日](http://www.nnh.to/12/05.html)\">\n12月05日は<a href=\"http://www.nnh.to/12/05.html\">モーツァルトの忌日</a></p>\n<h3>React.Suspense 完全に理解したわ〜</h3>\n<p>昨日の夜くらいからSuspenseまわりを実戦投入しようとごにょごにょしてたんだけど実装をちゃんと理解してなかったのもあってひどいことになった。で、今朝は通勤途中にドキュメントをちゃんと読んで午前中やってみたらいい感じに動きそうな匂いがしてきた。</p>\n<p>ドキュメントしっかり読み込むの苦手マンなところがあるんでちゃんと改善していこうっていう話はありつつも、やっぱ手を動かしてる方がスッと入ってくるものがあるので上手くバランス取れるようにしていこうなって思った。今日・明日くらいにはComponentを整えてProduction環境でデビューさせてあげたい</p>\n<h3>React 16.x Roadmap 読み直し</h3>\n<p><a href=\"https://medium.com/@dachi/154edabf6696\">昨日の投稿</a>にも書いたけど今日になってさらに「んで、Reactユーザとして何すればいいんだっけ〜」を理解したかったので読み直してみた。</p>\n<ul>\n<li>16.6: Suspenseを利用したコード分割<br>\n<code>React.lazy()</code> によるComponentのDynamic importが使える。<br>\n<code>[@babel/plugin-syntax-dynamic-import](https://www.npmjs.com/package/@babel/plugin-syntax-dynamic-import)</code> 入れれば動く。</li>\n<li>16.x: Hooksの追加<br>\nこのあたりからClass構文のComponentを減らす努力をして行きたい。</li>\n<li>16.x: Concurrent Mode<br>\nTime Slicingって呼んでたやつ？Componentの描画がメインスレッドをブロックしないので操作がスムーズなのかい？ちゃんと理解してない。</li>\n<li>16.x: Suspense for Data Fetching<br>\n<code>react-cache</code> の説明がここから出てきてる。<br>\nfetch &#x26; cacheを基本形としてデータ取得するサンプルが書いてある。<br>\nSuspenseの実戦的な使い方、って感じがある。</li>\n</ul>","timeToRead":1,"fields":{"path":"/posts/archive/2018-12-05_enjoy-react-suspense-and-react-lazy/"},"frontmatter":{"date":"2018-12-05T00:00:00.000Z","description":"今日のやったこと","title":"Enjoy React.Suspense & React.lazy() 🐼"}},"site":{"siteMetadata":{"description":"I forget if I don't write."}}},"pageContext":{"id":"96b7a2bf-a821-5b1c-8dc6-68f4e4a5f83c"}},"staticQueryHashes":[]}