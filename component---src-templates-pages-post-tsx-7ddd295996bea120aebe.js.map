{"version":3,"sources":["webpack://dachi023.github.io/./src/templates/pages/post.tsx"],"names":["Container","styled","Title","Body","PostPage","props","data","markdownRemark","frontmatter","description","site","siteMetadata","title","dangerouslySetInnerHTML","__html","html"],"mappings":"wMAOMA,EAAYC,oBAAH,2DAAGA,CAAH,qBAITC,EAAQD,mBAAH,uDAAGA,CAAH,yDAMLE,EAAOF,oBAAH,sDAAGA,CAAH,4OAuCK,SAASG,EAASC,GAC/B,OACEA,EAAMC,KAAKC,eAAeC,aACxB,gBAAC,IAAD,CACEC,YAAaJ,EAAMC,KAAKC,eAAeC,YAAYC,aAAeJ,EAAMC,KAAKI,KAAKC,aAAaF,YAC/FG,MAAOP,EAAMC,KAAKC,eAAeC,YAAYI,OAE7C,gBAACZ,EAAD,KACE,+BACE,gBAACE,EAAD,KAAQG,EAAMC,KAAKC,eAAeC,YAAYI,OAC9C,gBAACT,EAAD,CAAMU,wBAAyB,CAAEC,OAAQT,EAAMC,KAAKC,eAAeQ","file":"component---src-templates-pages-post-tsx-7ddd295996bea120aebe.js","sourcesContent":["import { graphql } from 'gatsby'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { MarkdownRemark } from '../../../types/graphql-types'\nimport Layout from '../../templates/Layout'\n\nconst Container = styled.div`\n  margin-top: 3em;\n`\n\nconst Title = styled.h1`\n  font-size: 1.8rem;\n  font-weight: 800;\n  text-align: center;\n`\n\nconst Body = styled.div`\n  font-size: 1.2rem;\n  em {\n    font-style: normal;\n  }\n  h2 {\n    font-size: 1.8rem;\n    margin-top: 2.1em;\n  }\n  h3 {\n    font-size: 1.5rem;\n    margin-top: 1.5em;\n  }\n  img {\n    margin-top: 1.5em;\n    width: 100%;\n  }\n  p {\n    line-height: 1.6em;\n    margin-top: 0.9em;\n  }\n  ul {\n    list-style: disc inside;\n    margin-top: 0.9em;\n  }\n`\n\ninterface Props {\n  data: {\n    markdownRemark: MarkdownRemark\n    site: {\n      siteMetadata: {\n        description: string\n        title: string\n      }\n    }\n  }\n}\n\nexport default function PostPage(props: Props) {\n  return (\n    props.data.markdownRemark.frontmatter && (\n      <Layout\n        description={props.data.markdownRemark.frontmatter.description || props.data.site.siteMetadata.description}\n        title={props.data.markdownRemark.frontmatter.title!}\n      >\n        <Container>\n          <article>\n            <Title>{props.data.markdownRemark.frontmatter.title}</Title>\n            <Body dangerouslySetInnerHTML={{ __html: props.data.markdownRemark.html! }} />\n          </article>\n        </Container>\n      </Layout>\n    )\n  )\n}\n\nexport const pageQuery = graphql`\n  query PostPageQuery($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      timeToRead\n      fields {\n        path\n      }\n      frontmatter {\n        date\n        description\n        title\n      }\n    }\n    site {\n      siteMetadata {\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}